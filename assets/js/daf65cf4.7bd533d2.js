"use strict";(self.webpackChunkfields_docs=self.webpackChunkfields_docs||[]).push([[254],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return f}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),c=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},u=function(e){var t=c(e.components);return a.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},p=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),p=c(n),f=r,m=p["".concat(s,".").concat(f)]||p[f]||d[f]||i;return n?a.createElement(m,l(l({ref:t},u),{},{components:n})):a.createElement(m,l({ref:t},u))}));function f(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,l=new Array(i);l[0]=p;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:r,l[1]=o;for(var c=2;c<i;c++)l[c]=n[c];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}p.displayName="MDXCreateElement"},980:function(e,t,n){n.r(t),n.d(t,{assets:function(){return u},contentTitle:function(){return s},default:function(){return f},frontMatter:function(){return o},metadata:function(){return c},toc:function(){return d}});var a=n(7462),r=n(3366),i=(n(7294),n(3905)),l=["components"],o={},s="ValidationResult",c={unversionedId:"validation-result",id:"validation-result",title:"ValidationResult",description:"Defines ValidationResult capabilities for VR[_], so that Fields know how to use it when validating.",source:"@site/../fields-docs/target/mdoc/validation-result.md",sourceDirName:".",slug:"/validation-result",permalink:"/fields/docs/validation-result",draft:!1,editUrl:"https://github.com/jap-company/fields/tree/master/docs/validation-result.md",tags:[],version:"current",frontMatter:{},sidebar:"docs",previous:{title:"FieldPath",permalink:"/fields/docs/fieldpath"},next:{title:"ValidationEffect",permalink:"/fields/docs/validation-effect"}},u={},d=[{value:"Instances",id:"instances",level:2},{value:"Syntax",id:"syntax",level:2}],p={toc:d};function f(e){var t=e.components,n=(0,r.Z)(e,l);return(0,i.kt)("wrapper",(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"validationresult"},"ValidationResult"),(0,i.kt)("p",null,"Defines ValidationResult capabilities for ",(0,i.kt)("inlineCode",{parentName:"p"},"VR[_]"),", so that Fields know how to use it when validating."),(0,i.kt)("h2",{id:"instances"},"Instances"),(0,i.kt)("p",null,"Predefined instances:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"jap.fields.ValidationResult.Accumulate")," - accumulates errors."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"jap.fields.ValidationResult.FailFast")," - holds first error that occured. Built using ",(0,i.kt)("inlineCode",{parentName:"li"},"Either")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"cats.data.ValidatedNel[_, Unit]")," - part of cats module"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"cats.data.ValidatedNec[_, Unit]")," - part of cats module")),(0,i.kt)("p",null,"If you need you can use your own ValidationResult data type by creating typeclass instance for it.\nHere is how it is implemented for FailFast"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-scala"},"type FailFast[+E] = Either[E, Unit]\n    implicit object FailFast extends FailFastLike[FailFast] {\n    def map[E, B](a: FailFast[E])(f: E => B): FailFast[B]   = a.left.map(f)\n    def valid[E]: FailFast[E]                               = Right(())\n    override def invalidMany[E](eh: E, et: E*): FailFast[E] = Left(eh)\n    def invalid[E](e: E): FailFast[E]                       = Left(e)\n    def isValid[E](e: FailFast[E]): Boolean                 = e.isRight\n    def and[E](a: FailFast[E], b: FailFast[E]): FailFast[E] = a.flatMap(_ => b)\n    def errors[E](vr: FailFast[E]): List[E]                 = vr.left.toSeq.toList\n}\n")),(0,i.kt)("h2",{id:"syntax"},"Syntax"),(0,i.kt)("p",null,"Having ValidationResult for your ",(0,i.kt)("inlineCode",{parentName:"p"},"VR[_]")," in scope you can use such syntax"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-scala"},"val vr1 = nameF.nonEmpty\nval vr2 = surnameF.nonEmpty\nvr1.isValid\nvr1.isInvalid\nvr1.errors // list of errors\nvr1 && vr2 //Logical AND\nvr1 and vr2 //Logical AND\nvr1 || vr2 //Logical OR\nvr1 or vr2 //Logical OR\nList(vr1, vr2).combineAll //combine all using and\ncombineAll(List(vr1, vr2)) //combine all using and\n")))}f.isMDXComponent=!0}}]);